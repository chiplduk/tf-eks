name: 'EKS cluster with ArgoCD'
id: eks-deploy

jobs:
  eks-deploy:
    name: "terraform_apply"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Chechout to repo
        uses: actions/checkout@v3
      - name: Install terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.7"
      - name: Init EKS
        id: init
        working-directory: eks
        run: |
          terraform init \
          -backend-config="bucket=${TFSTATE_BUCKET}" \
          -backend-config="region=${TFSTATE_REGION}" 
      - name: Terraform Plan
        id: plan
        working-directory: eks
        run: |
          terraform plan
      - name: Terraform Apply
        id: apply
        working-directory: eks
        run: |
          terraform apply -no-color --auto-approve
      - name: Install AWS cli
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2
      - name: Add EKS cluster
        id: eks_context
        run: |
          aws eks update-kubeconfig --name main --alias eks-main
      - name: Init ALB controller
        id: alb_init
        working-directory: alb-controller
        run: |
          terraform init \
          -backend-config="bucket=${TFSTATE_BUCKET}" \
          -backend-config="region=${TFSTATE_REGION}" 
      - name: Install ALB controller
        id: alb_apply
        working-directory: alb-controller
        run: |
          terraform apply -no-color --auto-approve
      - name: Init ArgoCD
        id: argocd_init
        working-directory: argocd
        run: |
          terraform init \
          -backend-config="bucket=${TFSTATE_BUCKET}" \
          -backend-config="region=${TFSTATE_REGION}"     
      - name: Install ArgoCD
        id: argocd_apply
        working-directory: argocd
        run: |
          terraform apply -no-color --auto-approve
      - name: Install kubectl
        uses: azure/setup-kubectl@v3   
      - name: argocd_patch
        run: |
          kubectl patch ingress argocd-server-ingress -n argocd -p '{"metadata":{"finalizers":["ingress.k8s.aws/resources"]}}' --type=merge

  eks-destroy:
    name: "terraform_destroy"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Chechout to repo
        uses: actions/checkout@v3    
      - name: Install terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.7"
      - name: Install AWS cli
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2
      - name: Add EKS cluster
        id: eks_context
        run: |
          aws eks update-kubeconfig --name main --alias eks-main                 
      - name: Init ArgoCD
        id: init_argocd
        working-directory: argocd
        run: |
          terraform init \
          -backend-config="bucket=${TFSTATE_BUCKET}" \
          -backend-config="region=${TFSTATE_REGION}" 
      - name: Destroy ArgoCD
        id: destroy_argocd
        working-directory: argocd
        run: |
          terraform destroy -no-color --auto-approve
      - name: Init ALB Controller
        id: init_alb_controller
        working-directory: alb-controller
        run: |
          terraform init \
          -backend-config="bucket=${TFSTATE_BUCKET}" \
          -backend-config="region=${TFSTATE_REGION}" 
      - name: Destroy ALB controller
        id: destroy_alb_controller
        working-directory: alb-controller
        run: |
          terraform destroy -no-color --auto-approve
      - name: Init EKS
        id: init_eks
        working-directory: eks
        run: |
          terraform init \
          -backend-config="bucket=${TFSTATE_BUCKET}" \
          -backend-config="region=${TFSTATE_REGION}" 
      - name: Destroy EKS
        id: destroy_eks
        working-directory: eks
        run: |
          terraform destroy -no-color --auto-approve
