name: 'EKS cluster with ArgoCD'
id: eks-deploy

jobs:
  eks-deploy:
    name: "terraform_apply"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Chechout to repo
        uses: actions/checkout@v3
      - name: Install terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.7"
      # VPC
      - name: Init VPC
        id: tf_init_vpc
        working-directory: vpc
        run: |
          terraform init \
          -backend-config="bucket=${TFSTATE_BUCKET}" \
          -backend-config="region=${TFSTATE_REGION}"
      - name: Terraform Plan
        id: tf_plan_vpc
        working-directory: vpc
        run: |
          echo $(pwd); ls $(pwd); terraform plan -var-file=terraform.tfvars -out=terraform.tfplan
      - name: Terraform Apply
        id: tf_apply_vpc
        working-directory: vpc
        run: |
          terraform apply "terraform.tfplan"       
      # EKS
      - name: Init EKS
        id: tf_init_eks
        working-directory: eks
        run: |
          terraform init \
          -backend-config="bucket=${TFSTATE_BUCKET}" \
          -backend-config="region=${TFSTATE_REGION}" 
      - name: Terraform Plan
        id: tf_plan_eks
        working-directory: eks
        run: |
          terraform plan -var-file=terraform.tfvars -out=terraform.tfplan
      - name: Terraform Apply
        id: tf_apply_eks
        working-directory: eks
        run: |
          terraform apply "terraform.tfplan"
      - name: Install AWS cli
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2
      - name: Add EKS cluster context
        id: eks_context
        run: |
          aws eks update-kubeconfig --name main --alias eks-main
      # ALB Controller
      - name: Terraform Init ALB controller
        id: tf_init_alb_controller
        working-directory: alb-controller
        run: |
          terraform init \
          -backend-config="bucket=${TFSTATE_BUCKET}" \
          -backend-config="region=${TFSTATE_REGION}"
      - name: Terraform Plan ALB Controller
        id: tf_plan_alb_controller
        working-directory: alb
        run: |
          terraform plan -out=terraform.tfplan          
      - name: Teraform Apply ALB controller
        id: tf_apply_alb_controller
        working-directory: alb-controller
        run: |
          terraform apply "terraform.tfplan"
      # ArgoCD
      - name: Terraform Init ArgoCD
        id: tf_init_argocd
        working-directory: argocd
        run: |
          terraform init \
          -backend-config="bucket=${TFSTATE_BUCKET}" \
          -backend-config="region=${TFSTATE_REGION}"
      - name: Terraform Plan ArgoCD
        id: tf_plan_argocd
        working-directory: argocd
        run: |
          terraform plan -out=terraform.tfplan             
      - name: Teraform Apply ArgoCD
        id: tf_apply_argocd
        working-directory: argocd
        run: |
          terraform apply "terraform.tfplan"
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
      # Add finalizer to be sure that ALB is destroyed by ALB controller once all ArgoCD applications are deleted.
      - name: argocd_patch
        run: |
          kubectl patch ingress argocd-server-ingress -n argocd -p '{"metadata":{"finalizers":["ingress.k8s.aws/resources"]}}' --type=merge

  eks-destroy:
    name: "terraform_destroy"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Chechout to repo
        uses: actions/checkout@v3    
      - name: Install terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.7"
      - name: Install AWS cli
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2
      - name: Add EKS cluster context
        id: eks_context
        run: |
          aws eks update-kubeconfig --name main --alias eks-main
      # ArgoCD
      - name: Terraform Init ArgoCD
        id: tf_init_argocd
        working-directory: argocd
        run: |
          terraform init \
          -backend-config="bucket=${TFSTATE_BUCKET}" \
          -backend-config="region=${TFSTATE_REGION}" 
      - name: Terraform Destroy ArgoCD
        id: tf_destroy_argocd
        working-directory: argocd
        run: |
          terraform destroy -no-color --auto-approve
      # ALB controller
      - name: Terraform Init ALB Controller
        id: tf_init_alb_controller
        working-directory: alb-controller
        run: |
          terraform init \
          -backend-config="bucket=${TFSTATE_BUCKET}" \
          -backend-config="region=${TFSTATE_REGION}" 
      - name: Terraform Destroy ALB controller
        id: tf_destroy_alb_controller
        working-directory: alb-controller
        run: |
          terraform destroy -no-color --auto-approve
      # EKS
      - name: Terraform Init EKS
        id: tf_init_eks
        working-directory: eks
        run: |
          terraform init \
          -backend-config="bucket=${TFSTATE_BUCKET}" \
          -backend-config="region=${TFSTATE_REGION}" 
      - name: Terraform Destroy EKS
        id: tf_destroy_eks
        working-directory: eks
        run: |
          terraform destroy -no-color --auto-approve
      # VPC
      - name: Terraform Init VPC
        id: tf_init_vpc
        working-directory: vpc
        run: |
          terraform init \
          -backend-config="bucket=${TFSTATE_BUCKET}" \
          -backend-config="region=${TFSTATE_REGION}" 
      - name: Terraform Destroy EKS
        id: tf_destroy_vpc
        working-directory: vpc
        run: |
          terraform destroy --auto-approve        
